{"version":3,"sources":["js/profile.js","js/conversation.js","js/index.js"],"names":["Profile","nombre","parametros","lenguaje","pitch","rate","color","img","imagenes","Conversation","text","texto","opcion","div","caja","p","msg","SpeechSynthesisUtterance","lang","onstart","src","className","appendChild","frase","onboundary","event","name","start","charIndex","end","charLength","palabra","substring","wordToWord","speechSynthesis","speak","childNodes","textContent","style","data","indice","charAt","i","document","createElement","querySelector","sintetizar","Frase","Palabra","Letra","manzProfile","robotProfile","breadmanProfile","ejemplo2","author","onclick","iniciar"],"mappings":"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","file":"js.d93ac98b.js","sourceRoot":"../src","sourcesContent":["import imagenes from \"../assets/*.png\";\nclass Profile {\n    constructor(nombre, parametros) {\n        this.nombre = nombre;\n        this.lenguaje = parametros[\"lang\"];\n        this.pitch = parametros[\"pitch\"];\n        this.rate = parametros[\"rate\"];\n        this.color = parametros[\"color\"];\n        this.img = imagenes[nombre];\n    }\n\n}\nexport default Profile;","class Conversation {\n    constructor(text) {\n        this.text = text;\n    }\n\n    sintetizar(texto, opcion, div, caja, p, img) {\n\n\n        const msg = new SpeechSynthesisUtterance();\n\n        msg.lang = texto[\"author\"].lenguaje;\n        msg.text = texto[\"text\"];\n        msg.rate = texto[\"author\"].rate;\n        msg.pitch = texto[\"author\"].pitch;\n\n\n        if (opcion == 's') {\n            msg.onstart = () => {\n                img.src = texto[\"author\"].img\n                div.className = \"chat\"\n                caja.appendChild(div);\n                div.appendChild(img)\n                div.appendChild(p)\n                this.frase(texto, div)\n\n            };\n        } else if (opcion == 'w') {\n\n            msg.onstart = () => {\n                div.className = \"chat\"\n                img.src = texto[\"author\"].img\n                caja.appendChild(div);\n                div.appendChild(img);\n                div.appendChild(p);\n\n\n            };\n            msg.onboundary = (event) => {\n                if (event.name === \"word\") {\n                    const start = event.charIndex;\n                    const end = start + event.charLength\n                    let palabra = msg.text.substring(start, end) + \" \";\n                    this.wordToWord(palabra, div, texto)\n\n                }\n            };\n        }\n        /*else if (opcion == 'l') {\n                   let windex = 0;\n                   msg.onstart = () => {\n                       div.className = \"chat\"\n                       img.src = texto[\"author\"].img\n                       caja.appendChild(div);\n                       div.appendChild(img);\n                       div.appendChild(p);\n\n\n                   };\n                   msg.onboundary = (event) => {\n                       const words = texto.text.split(\" \");\n                       for (let i = 0; i < words[windex].length; i++) {\n                           setTimeout(this.letterToLetter(texto, p, div, i, words[windex]), event.elapsedTime);\n\n                       }\n                       windex++;\n\n                       p.textContent = p.textContent + \"  \";\n                   };\n               }*/\n\n        speechSynthesis.speak(msg);\n\n    }\n    frase(texto, div) {\n        let p = div.childNodes[1]\n        p.textContent = texto[\"author\"].nombre + \": \" + texto[\"text\"];\n        p.style = \"color:\" + texto[\"author\"].color\n        div.childNodes[1].data = p;\n\n\n\n    }\n\n    wordToWord(palabra, div, texto) {\n\n        let p = div.childNodes[1];\n        p.textContent = palabra;\n        p.style = \"color:\" + texto[\"author\"].color;\n        div.childNodes[1].data = palabra;\n\n    }\n\n    letterToLetter(texto, p, div, indice, palabra) {\n\n        p.style = \"color:\" + texto[\"author\"].parametros[\"color\"];\n        p.textContent = p.textContent + palabra.charAt(indice);\n        div.childNodes[1].data = p;\n\n    }\n\n    iniciar(opcion) {\n\n        for (let i of this.text) {\n            const div = document.createElement('div');\n            const caja = document.querySelector(\"#box\");\n            const p = document.createElement('p');\n            const img = document.createElement('img');\n            this.sintetizar(i, opcion, div, caja, p, img)\n\n        }\n    }\n\n\n}\nexport default Conversation;","import Profile from \"./profile.js\";\nimport Conversation from \"./conversation.js\";\n\nconst Frase = document.querySelector(\"#Frase\")\nconst Palabra = document.querySelector(\"#Palabra\")\nconst Letra = document.querySelector(\"#Letra\")\nvar manzProfile = new Profile(\"Manz\", {\n    lang: \"es\",\n    rate: 1.0,\n    pitch: 1.0,\n    color: \"#ff0000\",\n});\nvar robotProfile = new Profile(\"Robot\", {\n    lang: \"en\",\n    rate: 1.0,\n    pitch: 4.0,\n    color: \"blue\",\n});\nvar breadmanProfile = new Profile(\"Breadman\", {\n    lang: \"es\",\n    rate: 1.0,\n    pitch: 3.0,\n    color: \"green\",\n});\nvar ejemplo2 = new Conversation([\n    { author: manzProfile, text: \"¡Hola a todos! ¿Qué tal están?\" },\n    { author: robotProfile, text: \"Muy bien, ¡gracias!\" },\n    { author: breadmanProfile, text: \"Yo también muy bien\" },\n    { author: manzProfile, text: \"El robot habla con un acento un tanto raro...\" },\n    { author: robotProfile, text: \"Es que soy del norte\" },\n]);\nFrase.onclick = () => {\n\n    ejemplo2.iniciar(\"s\");\n}\n\nPalabra.onclick = () => {\n\n    ejemplo2.iniciar(\"w\");\n}\nLetra.onclick = () => {\n\n    ejemplo2.iniciar(\"l\");\n}"]}